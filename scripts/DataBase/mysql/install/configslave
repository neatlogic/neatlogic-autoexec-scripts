#!/usr/bin/perl
#配置mysql my.cnf文件

use FindBin;
use lib "$FindBin::Bin/lib";
use lib "$FindBin::Bin/lib/perl-lib/lib/perl5";

use strict;
use Getopt::Long;
use MysqlExec;
use JSON qw(to_json from_json encode_json);


sub usage {
    my $pname = $FindBin::Script;

    print("$pname --rootpwd <root login use password> --masterip <mysql master ip> --binLogFile <master binLogFile> --binLogOffset <master binLogOffset> \n");
    exit(1);
}

my $errorState;

sub main {
    my ( $isHelp, $rootpwd, $masterip, $binLogFile, $binLogOffset );
    GetOptions(
        'h|help'     => \$isHelp,
        'rootpwd=s' => \$rootpwd,
        'masterip=s' => \$masterip,
        'binLogFile=s' => \$binLogFile,
        'binLogOffset=s' => \$binLogOffset
    );

    if ($isHelp) {
        usage();
    }
    my $hasOptErr = 0;
    if ( not defined($rootpwd) or $rootpwd eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined rootpwd by option --rootpwd.\n");
    }
    if ( not defined($masterip) or $masterip eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined masterip by option --masterip.\n");
    }
    if ( not defined($binLogFile) or $binLogFile eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined binLogFile by option --binLogFile.\n");
    }
    if ( not defined($binLogOffset) or $binLogOffset eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined binLogOffset by option --binLogOffset.\n");
    }
    if ( $hasOptErr == 1 ) {
        usage();
    }

    my $masteripJson = from_json($masterip);
    my $ip = @$masteripJson[0]->{'ip'};
    my $exitCode = 0;
    my $errorState;

    my $mysqlexec = MysqlExec->new(host => "localhost", port => "3306", username => "root", password => "$rootpwd");
    $exitCode = $mysqlexec->do(sql => "stop slave");
    $exitCode = $mysqlexec->do(sql => "CHANGE MASTER TO MASTER_HOST='$ip',MASTER_USER='root',MASTER_PASSWORD='$rootpwd',MASTER_LOG_FILE='$binLogFile',MASTER_LOG_POS=$binLogOffset");
    $exitCode = $mysqlexec->do(sql => "start slave");
    $exitCode = $mysqlexec->do(sql => "show slave status\\G");
    
    $errorState=`mysql -uroot -p'$rootpwd' 2>/dev/null <<EOF | grep -i Last_IO_Errno: | awk '{print \$2}'
	show slave status\\G;
EOF`;
    
    $errorState =~ s/[\r\n]+//g;
    if ($errorState ne "0" ){
        $exitCode = -1;
    }
    return $exitCode;
}

exit main();