#!/bin/bash

usage() {
    pname=$(basename $0)
    echo "Usage:"
    echo "$pname --rootpwd <root login use password> --vgname <vg group name, example:vg_centos> --lvname <mysql data lv name, example:lv_root> --snapname <create snapshot name, example:datasnap> --snapsize <create snapshot size, example:10GB> "
    exit -1
}

parseOpts() {
    OPT_SPEC=":h-:"
    while getopts "$OPT_SPEC" optchar; do
        case "${optchar}" in
        -)
            case "${OPTARG}" in
            rootpwd)
                rootpwd="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            vgname)
                vgname="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            lvname)
                lvname="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            snapname)
                snapname="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            snapsize)
                snapsize="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            *)
                if [ "$OPTERR" = 1 ] && [ "${OPT_SPEC:0:1}" != ":" ]; then
                    echo "Unknown option -- ${OPTARG}" >&2
                fi
                ;;
            esac
            ;;
        h)
            usage
            exit 2
            ;;
        *)
            if ["$OPTERR" != 1 ] || [ "${OPT_SPEC:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
        esac
    done
}
parseOpts "$@"

function DO_CMD() {
    echo Exec command: $@
    $@

    if [ $? != 0 ]; then
        HAS_ERROR=$?
        echo ERROR: Execute failed.
        exit $HAS_ERROR
    else
        echo FINE: Execute success.
    fi
}

masterStatus=`
mysql -uroot --connect-expired-password -p$rootpwd << EOF
        SET GLOBAL sync_binlog=1;
        SHOW MASTER STATUS;
        FLUSH LOGS;
        FLUSH TABLES WITH READ LOCK;
EOF
`
echo $masterStatus

binLogOffset=`echo $masterStatus | awk '{print $NF}'`
binLogFile=`echo $masterStatus | awk '{print $(NF-1)}'`
echo "bin log file:$binLogFile"
echo "bin log offset:$binLogOffset"


DO_CMD lvcreate -s -L $snapsize -n $snapname /dev/$vgname/$lvname --permission r

unlock=`
mysql -uroot --connect-expired-password -p$rootpwd << EOF
        UNLOCK TABLES;
        SET GLOBAL sync_binlog=0;
EOF
`
echo $unlock

if [ -e "/var/$snapname" ]; then
        DO_CMD rm -rf /var/$snapname
fi
DO_CMD mkdir /var/$snapname
DO_CMD mount /dev/$vgname/$snapname /var/snap

#Save bin-log
cat <<EOF >"output.json"
{
    "binLogOffset":"$binLogOffset",
    "binLogFile":"$binLogFile"
}
EOF