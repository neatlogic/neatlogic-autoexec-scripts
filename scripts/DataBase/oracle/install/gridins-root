#!/bin/bash
HAS_ERROR=0
function DO_CMD() {
    echo Exec ommand: $@
    $@
    EXIT_CODE=$?
    if [ $EXIT_CODE != 0 ]; then
        HAS_ERROR=1
        echo ERROR: Execute $@ failed.
        exit $EXIT_CODE
    else
        echo FINE: Execute success.
    fi
}

function SUDO_CMD() {
    USER=$1
    shift
    echo "Exec ommand: su - '$USER' -c '$@'"
    eval "su - '$USER' -c '$@'"
    EXIT_CODE=$?
    if [ $EXIT_CODE != 0 ]; then
        HAS_ERROR=1
        echo ERROR: Execute $@ failed.
        exit $EXIT_CODE
    else
        echo FINE: Execute success.
    fi
}

GRID_HOME=$1
if [ -z "$GRID_HOME" ]; then
    echo "ERROR: Argument not provided."
    echo "Usage: dbins-root <Oracle Home dir>"
    exit 2
fi

INVENTORY_LOCATION=$(cat $GRID_HOME/oraInst.loc | grep inventory_loc | sed s'/inventory_loc\s*=\s*//' | sed s'/\s*$//')

if [ -z "$INVENTORY_LOCATION" ]; then
    echo "ERROR: Can not determin invertory directory by file:$GRID_HOME/oraInst.loc."
    exit 3
fi

$INVENTORY_LOCATION/orainstRoot.sh
exitCode=$?
if [ $exitCode -ge 128 ]; then
    #负数返回码，大于127就是负数的补码
    echo "ERROR: Execute $INVENTORY_LOCATION/orainstRoot.sh failed, exitCode:$exitCode."
    exit $exitCode
elif [ $exitCode -gt 0 ]; then
    echo "WARN: Execute $INVENTORY_LOCATION/orainstRoot.sh has some warning, exitCode:$exitCode."
else
    echo "FINE: Execute $INVENTORY_LOCATION/orainstRoot.sh successful."
fi

$GRID_HOME/root.sh
exitCode=$?
if [ $exitCode -ge 128 ]; then
    #负数返回码，大于127就是负数的补码
    echo "ERROR: Execute $GRID_HOME/root.sh failed, exitCode:$exitCode."
    exit $exitCode
elif [ $exitCode -gt 0 ]; then
    echo "WARN: Execute $GRID_HOME/root.sh has some warning, exitCode:$exitCode."
else
    echo "FINE: Execute $GRID_HOME/root.sh successful."
fi

