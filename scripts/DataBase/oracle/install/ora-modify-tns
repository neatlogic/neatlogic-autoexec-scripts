#!/usr/bin/perl
#创建ASM磁盘组

use FindBin;
use lib "$FindBin::Bin/lib";
use lib "$FindBin::Bin/lib/perl-lib/lib/perl5";

use strict;
use Getopt::Long;

use AutoExecUtils;
use SqlplusExec;

sub usage {
    my $pname = $FindBin::Script;

    print("$pname --griduser <Grid os user name> --name <FRA disk group name> --disks <disk path 1>,<disk path 2>\n");
    exit(1);
}

my $str = q{
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = ${NODE2_FQ_HOSTNAME})(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = ${NODE2_DB_UNIQUE_NAME})
      (SID_NAME = ${ORACLE_SID})
      (ORACLE_HOME = ${ORACLE_HOME})
    )
    (SID_DESC =
      (GLOBAL_DBNAME = ${NODE2_DB_UNIQUE_NAME}${DB_DOMAIN_STR})
      (SID_NAME = ${ORACLE_SID})
      (ORACLE_HOME = ${ORACLE_HOME})
    )
    (SID_DESC =
      (SID_NAME = ${ORACLE_SID})
      (GLOBAL_DBNAME = ${NODE2_DB_UNIQUE_NAME}_DGMGRL${DB_DOMAIN_STR})
      (ORACLE_HOME = ${ORACLE_HOME})
      (ENVS="TNS_ADMIN=${ORACLE_HOME}/network/admin")
    )
  )
};

#my @matches = $str =~ /(\w\s*=\s*\((?:\(.*\)|[^\)])*\)|\w+)/sg;

#使用嵌套正则表达式进行多层嵌套括号的匹配
my $descRe; 
$descRe = qr/\((?:(?>[^()]+)|(??{$descRe}))*\)/x; 

while ($str =~ /([^\s\(\)]+)\s*=\s*($descRe)/sg){
    my $name = $1;
    my $desc = $2;

    print ("============================\n");
    print("$name = \n$desc\n");
    print("------------------------------\n");
}

sub main{
my ( $isHelp, $action, $filePath );
    my $gridUser = 'grid';
    GetOptions(
        'h|help'     => \$isHelp,
        'action=s' => \$action,
        'filepath=s'     => \$filePath
    );
    if ($isHelp) {
        usage();
    }
    my $hasOptErr = 0;
    if ( not defined($action) or $action eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined action by option --action <recreate|modify>.\n");
    }
    if ( not defined($filePath) or $filePath eq '' ) {
        $hasOptErr = 1;
        print("ERROR: Must defined tnsnames.ora or listener.ora file path by option --filepath.\n");
    }
if ( $hasOptErr == 1 ) {
        usage();
  }
}
exit(main())
