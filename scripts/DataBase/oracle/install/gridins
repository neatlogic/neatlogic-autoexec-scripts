#!/bin/bash
#GRID_USER=${GRID_USER}
#UNIX_GROUP_NAME=${UNIX_GROUP_NAME}
#INVENTORY_LOCATION=${INVENTORY_LOCATION}
#GRID_BASE=${GRID_BASE}
#GRID_HOME=${GRID_HOME}
#OSDBA_GROUP=${OSDBA_GROUP}
#OSOPER_GROUP=${OSOPER_GROUP}
#OSBACKUPDBA_GROUP=${OSBACKUPDBA_GROUP}
#OSDGDBA_GROUP=${OSDGDBA_GROUP}
#OSKMDBA_GROUP=${OSKMDBA_GROUP}
#OSRACDBA_GROUP=${OSRACDBA_GROUP}
#CLUSTER_NAME=${CLUSTER_NAME}
#SCAN_NAME=${SCAN_NAME}
#SCAN_PORT=${SAN_PORT}

#vote disks
#DISKS=/dev/asmdisks/asmdisk0b,/dev/asmdisks/asmdisk0c,/dev/asmdisks/asmdisk0d
#DISKS_WITH_FAILGROUPS=/dev/asmdisks/asmdisk0b,,/dev/asmdisks/asmdisk0c,,/dev/asmdisks/asmdisk0d
#diskDiscoveryString
#DISK_DISCOVERY_STRING=/dev/asmdisks/*
#CLUSTER_NODES=myrac01:myrac01-vip:HUB,myrac02:myrac02-vip:HUB
#NETWORK_INTERFACE_LIST=ens160:172.16.200.0:1,ens192:192.168.0.0:5

function DO_CMD() {
    echo Exec ommand: $@
    $@

    if [ $? != 0 ]; then
        HAS_ERROR=$?
        echo ERROR: Execute failed.
        exit $HAS_ERROR
    else
        echo FIND: Execute success.
    fi
}

function createOraDir() {
    mkdir -p $INVENTORY_LOCATION
    chown -R $GRID_USER:$INSTALL_GROUP $INVENTORY_LOCATION
    chmod -R 775 $INVENTORY_LOCATION

    mkdir -p $GRID_BASE
    mkdir -p $GRID_HOME
    chown -R $GRID_USER:$INSTALL_GROUP $GRID_BASE
    chown -R $GRID_USER:$INSTALL_GROUP $GRID_HOME
    chmod -R 775 $GRID_BASE
    chmod -R 775 $GRID_HOME
}

function installCvuqdisk() {
    export CVUQDISK_GRP=$INSTALL_GROUP
    rpm -ivh $GRID_HOME/cv/rpm/cvuqdisk-1.0.9-1.rpm
}

function setInstallEnv() {
    EXEC_ENV_TXT=$(echo $EXEC_ENV | sed "s/\\n/\n/g")
    if [ ! -z "$EXEC_ENV_TXT" ]; then
        eval "$EXEC_ENV_TXT"
    else
        echo "ERROR: Execute env is empty, must defined by option --EXEC_ENV."
        exit 2
    fi
}

function prepareRspFile(){
    if [ ! -e "$RESPONSE_FILE" ]; then
        echo "ERROR: Response file $RESPONSE_FILE not exist."
        exit 3
    fi

    sed -i s/'^\s*INVENTORY_LOCATION\s*=.*$'/"INVENTORY_LOCATION=$INVENTORY_LOCATION"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.crs.config.gpnp.scanName\s*=.*$'/"oracle.install.crs.config.gpnp.scanName=$SCAN_NAME"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.crs.config.gpnp.scanPort\s*=.*$'/"oracle.install.crs.config.gpnp.scanPort=$SCAN_PORT"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.crs.config.clusterNodes\s*=.*$'/"oracle.install.crs.config.clusterNodes=$CLUSTER_NODES"/ $RESPONSE_FILE
    sed -i s/'^\s*INVENTORY_LOCATION\s*=.*$'/"INVENTORY_LOCATION=$INVENTORY_LOCATION"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.crs.config.networkInterfaceList\s*=.*$'/"oracle.install.crs.config.networkInterfaceList=$NETWORK_INTERFACE_LIST"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.asm.diskGroup.disksWithFailureGroupNames\s*=.*$'/"oracle.install.asm.diskGroup.disksWithFailureGroupNames=$DISKS_WITH_FAILGROUPS"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.asm.diskGroup.disks\s*=.*$'/"oracle.install.asm.diskGroup.disks=$DISKS"/ $RESPONSE_FILE
    sed -i s/'^\s*oracle.install.asm.diskGroup.diskDiscoveryString\s*=.*$'/"oracle.install.asm.diskGroup.diskDiscoveryString=$DISK_DISCOVERY_STRING"/ $RESPONSE_FILE

    echo "USE $RESPONSE_FILE to setup silent...."
    cat $RESPONSE_FILE
}

#参数处理,全部用长参数
######################################
function parseOpts() {
    OPT_SPEC=":h-:"
    while getopts "$OPT_SPEC" optchar; do
        case "${optchar}" in
        -)
            case "${OPTARG}" in
            RSPONSE_FILE)
                RSPONSE_FILE="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            EXEC_ENV)
                EXEC_ENV="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            CLUSTER_NODES)
                CLUSTER_NODES="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            NETWORK_INTERFACE_LIST)
                NETWORK_INTERFACE_LIST="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            DISKS)
                DISKS="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            DISKS_WITH_FAILGROUPS)
                DISKS_WITH_FAILGROUPS="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            DISK_DISCOVERY_STRING)
                DISK_DISCOVERY_STRING="${!OPTIND}"
                OPTIND=$(($OPTIND + 1))
                ;;
            *)
                if [ "$OPTERR" = 1 ] && [ "${OPT_SPEC:0:1}" != ":" ]; then
                    echo "Unknown option --${OPTARG}" >&2
                fi
                ;;
            esac
            ;;
        h)
            usage
            exit 2
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${OPT_SPEC:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
        esac
    done
}

parseOpts "$@";
setInstallEnv();
prepareRspFile();

#su - grid #解压介质到GRID_HOME(ORACLE_HOME)
#验证
#$ORACLE_HOME/runcluvfy.sh stage -pre crsinst -n "oracle19crac01,oracle19crac02" -verbose
#grid用户执行安装

${ORACLE_HOME}/gridSetup.sh -ignorePrereq -waitforcompletion -silent \
    -responseFile ${ORACLE_HOME}/install/response/gridsetup.rsp \
    INVENTORY_LOCATION=/u01/app/oraInventory \
    SELECTED_LANGUAGES=en,en_GB \
    oracle.install.option=CRS_CONFIG \
    ORACLE_BASE=/u01/app/grid \
    oracle.install.asm.OSDBA=asmdba \
    oracle.install.asm.OSASM=asmadmin \
    oracle.install.asm.OSOPER=asmoper \
    oracle.install.crs.config.scanType=LOCAL_SCAN
# 修改clusterName
oracle.install.crs.config.clusterName=racdb
# 修改scanName
oracle.install.crs.config.gpnp.scanName=oracle19crac-scan \
    oracle.install.crs.config.gpnp.scanPort=1521 \
    oracle.install.crs.config.ClusterConfiguration=STANDALONE \
    oracle.install.crs.config.configureAsExtendedCluster=false \
    oracle.install.crs.config.gpnp.configureGNS=false \
    oracle.install.crs.config.autoConfigureClusterNodeVIP=false
# 修改主机名称和clusterNodes
oracle.install.crs.config.clusterNodes=oracle19crac01:oracle19crac01-vip:HUB,oracle19crac02:oracle19crac02-vip:HUB
# 修改网卡信息
oracle.install.crs.config.networkInterfaceList=ens160:172.16.200.0:1,ens192:192.168.0.0:5 \
    oracle.install.asm.configureGIMRDataDG=false \
    oracle.install.crs.config.useIPMI=false \
    oracle.install.asm.storageOption=ASM \
    oracle.install.asmOnNAS.configureGIMRDataDG=false
# 修改密码
oracle.install.asm.SYSASMPassword=oracle \
    oracle.install.asm.diskGroup.name=SYSDG \
    oracle.install.asm.diskGroup.redundancy=NORMAL \
    oracle.install.asm.diskGroup.AUSize=4 \
    oracle.install.asm.diskGroup.disksWithFailureGroupNames=/dev/asmdisks/asmdisk0b,,/dev/asmdisks/asmdisk0c,,/dev/asmdisks/asmdisk0d, \
    oracle.install.asm.diskGroup.disks=/dev/asmdisks/asmdisk0b,/dev/asmdisks/asmdisk0c,/dev/asmdisks/asmdisk0d \
    oracle.install.asm.diskGroup.diskDiscoveryString=/dev/asmdisks/* \
    oracle.install.asm.configureAFD=false
# 修改密码
oracle.install.asm.monitorPassword=oracle \
    oracle.install.crs.configureRHPS=false \
    oracle.install.crs.config.ignoreDownNodes=false \
    oracle.install.config.managementOption=NONE \
    oracle.install.config.omsPort=0 \
    oracle.install.crs.rootconfig.executeRootScript=false

#在各个节点执行root脚本，执行root.sh时间比较长
#执行INVENTORY_DIR/orainstRoot.sh，GRID_HOME/root.sh

#sqlplus创建磁盘组
create diskgroup fradg external redundancy disk '/dev/asmdisks/asmdisk0e','/dev/asmdisks/asmdisk0f' ATTRIBUTE 'compatible.rdbms' = '19.0', 'compatible.asm' = '19.0'
create diskgroup datadg external redundancy disk '/dev/asmdisks/asmdisk0g','/dev/asmdisks/asmdisk0h' ATTRIBUTE 'compatible.rdbms' = '19.0', 'compatible.asm' = '19.0'
srvctl start diskgroup -diskgroup datadg
srvctl start diskgroup -diskgroup fradg
asmcmd lsdg

#检查集群状态
crsctl check crs
crsctl check cluster
olsnodes -n -i -s
crsctl query css votedisk
srvctl config scan
srvctl config scan_listener
